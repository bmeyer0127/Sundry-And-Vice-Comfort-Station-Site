// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace SundryAndViceComfortStationSite.Migrations
{
    [DbContext(typeof(CircleHospitalityContext))]
    [Migration("20240906135743_AllergensInMenuItem")]
    partial class AllergensInMenuItem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ingredient", b =>
                {
                    b.Property<int>("IngredientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientID"));

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IngredientID");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            IngredientID = 1,
                            IngredientName = "Lemon Juice"
                        },
                        new
                        {
                            IngredientID = 2,
                            IngredientName = "Lime Juice"
                        },
                        new
                        {
                            IngredientID = 3,
                            IngredientName = "Pineapple Juice"
                        },
                        new
                        {
                            IngredientID = 4,
                            IngredientName = "Grapefruit Juice"
                        },
                        new
                        {
                            IngredientID = 5,
                            IngredientName = "Orange Juice"
                        },
                        new
                        {
                            IngredientID = 6,
                            IngredientName = "Simple Syrup"
                        },
                        new
                        {
                            IngredientID = 7,
                            IngredientName = "Honey Syrup"
                        },
                        new
                        {
                            IngredientID = 8,
                            IngredientName = "Ginger Syrup"
                        },
                        new
                        {
                            IngredientID = 9,
                            IngredientName = "Demerara Syrup"
                        },
                        new
                        {
                            IngredientID = 10,
                            IngredientName = "Passionfruit Liqueur"
                        },
                        new
                        {
                            IngredientID = 11,
                            IngredientName = "Vodka (Non-Specific)"
                        },
                        new
                        {
                            IngredientID = 12,
                            IngredientName = "Gin (Non-Specific)"
                        },
                        new
                        {
                            IngredientID = 13,
                            IngredientName = "Rum (Non-Specific)"
                        },
                        new
                        {
                            IngredientID = 14,
                            IngredientName = "Tequila (Non-Specific)"
                        },
                        new
                        {
                            IngredientID = 15,
                            IngredientName = "Bourbon (Non-Specific)"
                        },
                        new
                        {
                            IngredientID = 16,
                            IngredientName = "Rye (Non-Specific)"
                        },
                        new
                        {
                            IngredientID = 17,
                            IngredientName = "Scotch (Non-Specific)"
                        },
                        new
                        {
                            IngredientID = 18,
                            IngredientName = "New Riff Kentucky Wild Gin"
                        },
                        new
                        {
                            IngredientID = 19,
                            IngredientName = "Angostura Bitters"
                        },
                        new
                        {
                            IngredientID = 20,
                            IngredientName = "Orange Bitters"
                        },
                        new
                        {
                            IngredientID = 21,
                            IngredientName = "Peychaud's Bitters"
                        },
                        new
                        {
                            IngredientID = 22,
                            IngredientName = "Serrano Pepper"
                        },
                        new
                        {
                            IngredientID = 23,
                            IngredientName = "Fresh Mint"
                        },
                        new
                        {
                            IngredientID = 24,
                            IngredientName = "Grapefruit Peel"
                        },
                        new
                        {
                            IngredientID = 25,
                            IngredientName = "Saline"
                        });
                });

            modelBuilder.Entity("ItemIngredient", b =>
                {
                    b.Property<int>("MenuItemID")
                        .HasColumnType("int");

                    b.Property<int>("IngredientID")
                        .HasColumnType("int");

                    b.Property<float>("MeasurementAmount")
                        .HasColumnType("real");

                    b.Property<int>("MeasurementID")
                        .HasColumnType("int");

                    b.HasKey("MenuItemID", "IngredientID");

                    b.HasIndex("IngredientID");

                    b.HasIndex("MeasurementID");

                    b.ToTable("ItemIngredients");

                    b.HasData(
                        new
                        {
                            MenuItemID = 1,
                            IngredientID = 1,
                            MeasurementAmount = 0.75f,
                            MeasurementID = 1
                        },
                        new
                        {
                            MenuItemID = 1,
                            IngredientID = 7,
                            MeasurementAmount = 0.75f,
                            MeasurementID = 1
                        },
                        new
                        {
                            MenuItemID = 1,
                            IngredientID = 15,
                            MeasurementAmount = 2f,
                            MeasurementID = 1
                        },
                        new
                        {
                            MenuItemID = 1,
                            IngredientID = 24,
                            MeasurementAmount = 1f,
                            MeasurementID = 5
                        },
                        new
                        {
                            MenuItemID = 2,
                            IngredientID = 2,
                            MeasurementAmount = 1f,
                            MeasurementID = 1
                        },
                        new
                        {
                            MenuItemID = 2,
                            IngredientID = 6,
                            MeasurementAmount = 0.75f,
                            MeasurementID = 1
                        },
                        new
                        {
                            MenuItemID = 2,
                            IngredientID = 12,
                            MeasurementAmount = 2f,
                            MeasurementID = 1
                        },
                        new
                        {
                            MenuItemID = 3,
                            IngredientID = 1,
                            MeasurementAmount = 0.75f,
                            MeasurementID = 1
                        },
                        new
                        {
                            MenuItemID = 3,
                            IngredientID = 7,
                            MeasurementAmount = 0.25f,
                            MeasurementID = 1
                        },
                        new
                        {
                            MenuItemID = 3,
                            IngredientID = 10,
                            MeasurementAmount = 0.5f,
                            MeasurementID = 1
                        },
                        new
                        {
                            MenuItemID = 3,
                            IngredientID = 18,
                            MeasurementAmount = 1.5f,
                            MeasurementID = 1
                        },
                        new
                        {
                            MenuItemID = 3,
                            IngredientID = 22,
                            MeasurementAmount = 1f,
                            MeasurementID = 6
                        },
                        new
                        {
                            MenuItemID = 3,
                            IngredientID = 23,
                            MeasurementAmount = 6f,
                            MeasurementID = 4
                        },
                        new
                        {
                            MenuItemID = 4,
                            IngredientID = 1,
                            MeasurementAmount = 0.75f,
                            MeasurementID = 1
                        },
                        new
                        {
                            MenuItemID = 4,
                            IngredientID = 6,
                            MeasurementAmount = 0.75f,
                            MeasurementID = 1
                        },
                        new
                        {
                            MenuItemID = 4,
                            IngredientID = 15,
                            MeasurementAmount = 2f,
                            MeasurementID = 1
                        },
                        new
                        {
                            MenuItemID = 5,
                            IngredientID = 2,
                            MeasurementAmount = 1f,
                            MeasurementID = 1
                        },
                        new
                        {
                            MenuItemID = 5,
                            IngredientID = 6,
                            MeasurementAmount = 0.75f,
                            MeasurementID = 1
                        },
                        new
                        {
                            MenuItemID = 5,
                            IngredientID = 13,
                            MeasurementAmount = 2f,
                            MeasurementID = 1
                        },
                        new
                        {
                            MenuItemID = 5,
                            IngredientID = 25,
                            MeasurementAmount = 1f,
                            MeasurementID = 3
                        });
                });

            modelBuilder.Entity("ItemType", b =>
                {
                    b.Property<int>("ItemTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemTypeID"));

                    b.Property<string>("ItemTypeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemTypeID");

                    b.ToTable("ItemTypes");

                    b.HasData(
                        new
                        {
                            ItemTypeID = 1,
                            ItemTypeDescription = "Classic"
                        },
                        new
                        {
                            ItemTypeID = 2,
                            ItemTypeDescription = "House"
                        },
                        new
                        {
                            ItemTypeID = 3,
                            ItemTypeDescription = "Draft"
                        },
                        new
                        {
                            ItemTypeID = 4,
                            ItemTypeDescription = "Beer"
                        },
                        new
                        {
                            ItemTypeID = 5,
                            ItemTypeDescription = "Wine"
                        });
                });

            modelBuilder.Entity("Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationID"));

                    b.Property<string>("LocationAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationID");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationID = 1,
                            LocationAddress = "850 Massachusetts Ave, Indianapolis, IN 46204",
                            LocationName = "Sundry and Vice - Indy"
                        },
                        new
                        {
                            LocationID = 2,
                            LocationAddress = "18 W 13th St, Cincinnati, OH 45202",
                            LocationName = "Sundry and Vice - Cincy"
                        },
                        new
                        {
                            LocationID = 3,
                            LocationAddress = "793 E McMillan St, Cincinnati, OH 45206",
                            LocationName = "Comfort Station - Cincy"
                        });
                });

            modelBuilder.Entity("LocationMenu", b =>
                {
                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<int>("MenuItemID")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("LocationID", "MenuItemID");

                    b.HasIndex("MenuItemID");

                    b.ToTable("LocationMenus");

                    b.HasData(
                        new
                        {
                            LocationID = 1,
                            MenuItemID = 1,
                            Price = 14
                        },
                        new
                        {
                            LocationID = 1,
                            MenuItemID = 2,
                            Price = 15
                        },
                        new
                        {
                            LocationID = 1,
                            MenuItemID = 3,
                            Price = 12
                        },
                        new
                        {
                            LocationID = 1,
                            MenuItemID = 5,
                            Price = 6
                        },
                        new
                        {
                            LocationID = 1,
                            MenuItemID = 6,
                            Price = 5
                        },
                        new
                        {
                            LocationID = 1,
                            MenuItemID = 7,
                            Price = 6
                        },
                        new
                        {
                            LocationID = 1,
                            MenuItemID = 8,
                            Price = 4
                        },
                        new
                        {
                            LocationID = 1,
                            MenuItemID = 9,
                            Price = 12
                        },
                        new
                        {
                            LocationID = 1,
                            MenuItemID = 10,
                            Price = 11
                        },
                        new
                        {
                            LocationID = 2,
                            MenuItemID = 1,
                            Price = 13
                        },
                        new
                        {
                            LocationID = 2,
                            MenuItemID = 2,
                            Price = 16
                        },
                        new
                        {
                            LocationID = 2,
                            MenuItemID = 5,
                            Price = 7
                        },
                        new
                        {
                            LocationID = 2,
                            MenuItemID = 9,
                            Price = 12
                        },
                        new
                        {
                            LocationID = 2,
                            MenuItemID = 10,
                            Price = 11
                        },
                        new
                        {
                            LocationID = 2,
                            MenuItemID = 6,
                            Price = 5
                        },
                        new
                        {
                            LocationID = 2,
                            MenuItemID = 7,
                            Price = 6
                        },
                        new
                        {
                            LocationID = 2,
                            MenuItemID = 8,
                            Price = 7
                        },
                        new
                        {
                            LocationID = 3,
                            MenuItemID = 2,
                            Price = 15
                        },
                        new
                        {
                            LocationID = 3,
                            MenuItemID = 4,
                            Price = 16
                        },
                        new
                        {
                            LocationID = 3,
                            MenuItemID = 5,
                            Price = 12
                        },
                        new
                        {
                            LocationID = 3,
                            MenuItemID = 8,
                            Price = 4
                        },
                        new
                        {
                            LocationID = 3,
                            MenuItemID = 9,
                            Price = 12
                        },
                        new
                        {
                            LocationID = 3,
                            MenuItemID = 10,
                            Price = 10
                        });
                });

            modelBuilder.Entity("Measurement", b =>
                {
                    b.Property<int>("MeasurementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeasurementID"));

                    b.Property<string>("MeasurementDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MeasurementID");

                    b.ToTable("Measurements");

                    b.HasData(
                        new
                        {
                            MeasurementID = 1,
                            MeasurementDescription = "oz"
                        },
                        new
                        {
                            MeasurementID = 2,
                            MeasurementDescription = "ml"
                        },
                        new
                        {
                            MeasurementID = 3,
                            MeasurementDescription = "dash(es)"
                        },
                        new
                        {
                            MeasurementID = 4,
                            MeasurementDescription = "leaf/leaves"
                        },
                        new
                        {
                            MeasurementID = 5,
                            MeasurementDescription = "peel(s)"
                        },
                        new
                        {
                            MeasurementID = 6,
                            MeasurementDescription = "slice(s)"
                        });
                });

            modelBuilder.Entity("MenuItem", b =>
                {
                    b.Property<int>("MenuItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItemID"));

                    b.Property<string>("CreatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasDairy")
                        .HasColumnType("bit");

                    b.Property<bool>("HasEgg")
                        .HasColumnType("bit");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemTypeID")
                        .HasColumnType("int");

                    b.HasKey("MenuItemID");

                    b.HasIndex("ItemTypeID");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            MenuItemID = 1,
                            HasDairy = false,
                            HasEgg = false,
                            ItemDescription = "Curing",
                            ItemName = "Night Cure",
                            ItemTypeID = 2
                        },
                        new
                        {
                            MenuItemID = 2,
                            HasDairy = false,
                            HasEgg = false,
                            ItemDescription = "Refreshing",
                            ItemName = "Gimlet",
                            ItemTypeID = 1
                        },
                        new
                        {
                            MenuItemID = 3,
                            CreatorName = "Brett",
                            HasDairy = false,
                            HasEgg = false,
                            ItemDescription = "Sweet and evil",
                            ItemName = "Persephone's Papercut",
                            ItemTypeID = 2
                        },
                        new
                        {
                            MenuItemID = 4,
                            HasDairy = false,
                            HasEgg = false,
                            ItemDescription = "You know",
                            ItemName = "Whiskey Sour",
                            ItemTypeID = 1
                        },
                        new
                        {
                            MenuItemID = 5,
                            HasDairy = false,
                            HasEgg = false,
                            ItemDescription = "You need one",
                            ItemName = "Daiquiri",
                            ItemTypeID = 1
                        },
                        new
                        {
                            MenuItemID = 6,
                            HasDairy = false,
                            HasEgg = false,
                            ItemDescription = "Taste the East Coast",
                            ItemName = "Narraganset",
                            ItemTypeID = 4
                        },
                        new
                        {
                            MenuItemID = 7,
                            HasDairy = false,
                            HasEgg = false,
                            ItemDescription = "I want it so bad",
                            ItemName = "PBR",
                            ItemTypeID = 4
                        },
                        new
                        {
                            MenuItemID = 8,
                            HasDairy = false,
                            HasEgg = false,
                            ItemDescription = "It's fine",
                            ItemName = "Draft Old Fashioned",
                            ItemTypeID = 3
                        },
                        new
                        {
                            MenuItemID = 9,
                            HasDairy = false,
                            HasEgg = false,
                            ItemDescription = "Dry and fine",
                            ItemName = "Cabernet",
                            ItemTypeID = 5
                        },
                        new
                        {
                            MenuItemID = 10,
                            HasDairy = false,
                            HasEgg = false,
                            ItemDescription = "Extremely mid",
                            ItemName = "Chenin Blanc",
                            ItemTypeID = 5
                        });
                });

            modelBuilder.Entity("ItemIngredient", b =>
                {
                    b.HasOne("Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Measurement", "Measurement")
                        .WithMany()
                        .HasForeignKey("MeasurementID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Measurement");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("LocationMenu", b =>
                {
                    b.HasOne("Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("MenuItem", b =>
                {
                    b.HasOne("ItemType", "ItemType")
                        .WithMany("MenuItems")
                        .HasForeignKey("ItemTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemType");
                });

            modelBuilder.Entity("ItemType", b =>
                {
                    b.Navigation("MenuItems");
                });
#pragma warning restore 612, 618
        }
    }
}
