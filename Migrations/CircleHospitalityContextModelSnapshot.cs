// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace SundryAndViceComfortStationSite.Migrations
{
    [DbContext(typeof(CircleHospitalityContext))]
    partial class CircleHospitalityContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gallery", b =>
                {
                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("PathToPicture")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PictureDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationID", "PathToPicture");

                    b.ToTable("Galleries");
                });

            modelBuilder.Entity("HoursOpen", b =>
                {
                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("DayOfWeek")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CloseTime")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("OpenTime")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("LocationID", "DayOfWeek");

                    b.ToTable("HoursOpens");
                });

            modelBuilder.Entity("Ingredient", b =>
                {
                    b.Property<int>("IngredientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientID"));

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IngredientID");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("ItemIngredient", b =>
                {
                    b.Property<int>("MenuItemID")
                        .HasColumnType("int");

                    b.Property<int>("IngredientID")
                        .HasColumnType("int");

                    b.Property<int>("MeasurementID")
                        .HasColumnType("int");

                    b.HasKey("MenuItemID", "IngredientID");

                    b.ToTable("ItemIngredients");
                });

            modelBuilder.Entity("ItemType", b =>
                {
                    b.Property<int>("ItemTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemTypeID"));

                    b.Property<string>("ItemTypeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemTypeID");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationID"));

                    b.Property<string>("LocationAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationID");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("LocationMenu", b =>
                {
                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<int>("MenuItemID")
                        .HasColumnType("int");

                    b.Property<bool>("HasDairy")
                        .HasColumnType("bit");

                    b.Property<bool>("HasEgg")
                        .HasColumnType("bit");

                    b.HasKey("LocationID", "MenuItemID");

                    b.ToTable("LocationMenus");
                });

            modelBuilder.Entity("Measurement", b =>
                {
                    b.Property<int>("MeasurementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeasurementID"));

                    b.Property<string>("MeasurementDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MeasurementID");

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("MenuItem", b =>
                {
                    b.Property<int>("MenuItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItemID"));

                    b.Property<string>("CreatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemTypeID")
                        .HasColumnType("int");

                    b.HasKey("MenuItemID");

                    b.ToTable("MenuItems");
                });
#pragma warning restore 612, 618
        }
    }
}
