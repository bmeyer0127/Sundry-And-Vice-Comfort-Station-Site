@namespace MyComponents.EditItem
@inject CircleHospitalityContext Context
@rendermode InteractiveServer
@using MyComponents.ItemTypeDropdown
@using MyComponents.IngredientList
@using MyComponents.FormModels.MenuItemFormModel
@using Pages.Admin
@using System
@using System.Linq
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations

<button class="btn btn-outline-primary" type="button" @onclick="() => ChooseItemOffCanvas.ShowAsync()">
    Edit Item
</button>

<Offcanvas @ref="ChooseItemOffCanvas" IsScrollable="true" Title="Choose Item to Edit">
    <BodyTemplate>
        <ul class="ps-0">
            @* Would like to make this alphabetical *@
            @foreach (MenuItem menuItem in Context.MenuItems)
            {
                <li class="list-group-item text-start pb-3">
                    <button 
                        class="btn btn-outline-primary"
                        type="button"
                        value="@menuItem.MenuItemID"
                        @onclick="() => { EditItemOffCanvas.ShowAsync(); itemID = menuItem.MenuItemID; assignMenuitem(menuItem);}">
                        Edit
                    </button>
                    <Offcanvas @ref="EditItemOffCanvas" IsScrollable="true" Title="Edit the Item">
                        <BodyTemplate>
                            <div class="row pb-3">
                                <label>
                                    @Context.MenuItems.Where(item => item.MenuItemID == itemID).Select(item => item.ItemName).SingleOrDefault()
                                </label>
                            </div>

                            <div class="row pb-3">
                                <label class="col-4">
                                    Item Name
                                </label>
                                <div class="col-8 text-start">
                                    <InputText @bind-Value="editedMenuItem.ItemName" />
                                </div>
                            </div>

                            <div class="row pb-3">
                                <label class="col-4">
                                    Item Description
                                </label>
                                <div class="col-8 text-start">
                                    <InputText @bind-Value="editedMenuItem.ItemDescription" />
                                </div>
                            </div>

                            <div class="row pb-3">
                                <div class="col-4 text-start">
                                    <label class="form-label">Available at:</label>
                                </div>
                                <div class="col-8">
                                    <div class="container text-start">
                                        <div class="row">
                                            <div class="col text-start">
                                                <InputCheckbox @bind-Value="@IsAtSVI" />
                                                <label for="IsAtSVI" class="form-label ms-2">SVI</label>
                                            </div>
                                            <div class="col text-start">
                                                <CurrencyInput @bind-Value="SVIPrice" />
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col text-start">
                                                <InputCheckbox @bind-Value="@IsAtSVC" />
                                                <label for="availSVC" class="form-label ms-2">SVC</label>
                                            </div>
                                            <div class="col text-start">
                                                <CurrencyInput @bind-Value="SVCPrice" />
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col text-start">
                                                <InputCheckbox @bind-Value="@IsAtCS" />
                                                <label for="availCS" class="form-label ms-2">CS</label>
                                            </div>
                                            <div class="col text-start">
                                                <CurrencyInput @bind-Value="CSPrice" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row pb-3">
                                <label class="col-4">
                                    Creator's Name
                                </label>
                                <div class="col-8 text-start">
                                    <InputText @bind-Value="editedMenuItem.CreatorName" />
                                </div>
                            </div>

                            <button @onclick="() => submitEdit(menuItem)">submit</button>

                        </BodyTemplate>
                    </Offcanvas>
                    <label
                        for="@menuItem.MenuItemID">
                        @menuItem.ItemName
                    </label>
                </li>
            }
        </ul>
    </BodyTemplate>
</Offcanvas>



@code {
    private Offcanvas ChooseItemOffCanvas;
    private Offcanvas EditItemOffCanvas;
    private int itemID;

    private MenuItem editedMenuItem = new MenuItem();

    private LocationMenu editedSVILocationMenu = new LocationMenu();
    private LocationMenu editedSVCLocationMenu = new LocationMenu();
    private LocationMenu editedCSLocationMenu = new LocationMenu();

    private bool IsAtSVI { get; set; }
    private bool IsAtSVC { get; set; }
    private bool IsAtCS { get; set; }

    private int SVIPrice { get; set; }
    private int SVCPrice { get; set; }
    private int CSPrice { get; set; }




    // if (IsAtSVI)
    // {
    //     newLocationMenu.LocationID = 1;
    //     newLocationMenu.MenuItemID = newMenuItem.MenuItemID;
    //     newLocationMenu.Price = SVIPrice;
    //     Context.LocationMenus.Add(newLocationMenu);
    //     Context.SaveChanges();
    // }

    // if (IsAtSVC)
    // {
    //     newLocationMenu.LocationID = 2;
    //     newLocationMenu.MenuItemID = newMenuItem.MenuItemID;
    //     newLocationMenu.Price = SVCPrice;
    //     Context.LocationMenus.Add(newLocationMenu);
    //     Context.SaveChanges();
    // }

    // if (IsAtCS)
    // {
    //     newLocationMenu.LocationID = 3;
    //     newLocationMenu.MenuItemID = newMenuItem.MenuItemID;
    //     newLocationMenu.Price = CSPrice;
    //     Context.LocationMenus.Add(newLocationMenu);
    //     Context.SaveChanges();
    // }

    private MenuItem assignMenuitem(MenuItem oldMenuItem)
    {
        editedMenuItem = oldMenuItem;
        editedSVILocationMenu = Context.LocationMenus.Where(item => (item.MenuItemID == oldMenuItem.MenuItemID) && (item.LocationID == 1)).Select(LocationMenu);
        Console.WriteLine(Context.LocationMenus.Where(item => (item.MenuItemID == oldMenuItem.MenuItemID) && (item.LocationID == 1)));
        return editedMenuItem;
    }

    private void submitEdit(MenuItem oldMenuItem)
    {
        oldMenuItem = editedMenuItem;
        Context.SaveChanges();
    }

    private void cancelEdit(MenuItem oldMenuItem)
    {
        
    }
}
