@namespace MyComponents.IngredientList
@rendermode InteractiveServer
@inject CircleHospitalityContext Context
@using System
@using System.Collections.Generic
@using System.Collections
@using System.Linq
@using MyComponents.AddCocktail
<div>
    <CascadingValue Value="ingredientMeasurements">
        <AddCocktail />
    </CascadingValue>
</div>
<div class="container">
    <input type="text" class="form-control-sm w-100" placeholder="search" @bind="searchInput" />
    <div class="list-group overflow-auto mb-3" style="max-height: 150px; min-height: 150px">
        <ul>
            @foreach (Ingredient ingredient in Context.Ingredients.Where(i => i.IngredientName!.Contains(searchInput)))
            {
                <li class="list-group-item d-flex">
                    <button 
                        class="btn btn-outline-primary me-2" 
                        type="button" 
                        id="@ingredient.IngredientID"
                        value="@ingredient.IngredientID" 
                        @onclick ="() => addIngredient(ingredient.IngredientID)">
                        Add
                        </button>
                    <label 
                        class="form-check-label"
                        for="@ingredient.IngredientID">
                        @ingredient.IngredientName
                        </label>
                </li>
            }
        </ul>
    </div>
</div>
<div class="container">
    <div class="list-group overflow-auto" style="max-height: 150px; min-height: 150px">
        @foreach (IngredientMeasurements ingredient in ingredientMeasurements)
        {
            <div class="list-group-item d-flex">
                <div class="container">
                    <div class="row justify-content-start">
                        <div class="col-6 text-start">
                            <label class="form-check-label">
                                @Context.Ingredients.Where(ing => ing.IngredientID == ingredient.measureIngredientID).Select(ing => ing.IngredientName).First()
                            </label>
                        </div>
                        <div class="col-2 p-2">
                            <InputNumber TValue="float" @bind-Value="ingredient.measurementAmount" class="w-100"/>
                        </div>
                        <div class="col-4">
                            <InputSelect @bind-Value="ingredient.measureTypeID">
                                @foreach (var measurement in (from M in Context.Measurements select new { M.MeasurementDescription, M.MeasurementID }))
                                {
                                    <option value=@measurement.MeasurementID>@measurement.MeasurementDescription</option>
                                }
                            </InputSelect>
                        </div>
                    </div>
                </div>
            </div>
        }
        </div>
    
</div>



@code {
    float ingredientAmount; 
    string searchInput = "";
    public List<IngredientMeasurements> ingredientMeasurements = new List<IngredientMeasurements> { };

    public class IngredientMeasurements
    {
        public int measureIngredientID { get; set; }
        public int measureTypeID { get; set; }
        public float measurementAmount { get; set; }
    }

    public void addIngredient(int ingredientID)
    {
        ingredientMeasurements.Add(new IngredientMeasurements { measureIngredientID = ingredientID } );
    }
}
